{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Get started \u00b6 The instructions in this document offers the following guidance: Set up the Management Presence Server Modify json configuration sample files Connect to an activated AMT device Overview of the Management Presence Server (MPS) \u00b6 MPS is cloud agnostic microservice that enables Intel AMT-based platforms connecting over the Internet to connect securely to manageability consoles. The image below is a representation of using MPS server connected to an activated AMT device. Requirements for MPS Server \u00b6 Software Requirements \u00b6 git node.js v10 or greater Hardware Requirements \u00b6 Activated Device with Intel\u00ae AMT Computer or device used to connect to MPS server Computer or device to connect the client console Supported Platforms \u00b6 The MPS server can run on all platforms that support node.js. One consideration is exposing ports on the server used to run MPS. Typically, these are: 3000 4433 MPS Server: Set Up \u00b6 The instructions below are performed on the MPS server. To begin, run a platform that supports nodejs. Example: Virtual Machine with nodejs support Dedicated Server with nodejs support Once the software pre-requisites are met for the MPS, you can begin the rest of the set up of MPS. 1. Clone the repository \u00b6 git clone https://github.com/open-amt-cloud-toolkit/MPS.git cd MPS 2. Add/modify config.json \u00b6 Navigate to the private directory within the MPS directory, cd ~/MPS/private Create a config.json file. *Copy the example file in the directory. cp config.json.example config.json These following parameters can be configured. Option Description usewhitelist set to true to whitelist AMT GUIDs stored in guids.json commonName used in self signed certificate, can be either FQDN or IP address mpsport port mpsusername new username for mpsusername set during this current process mpspass new password for the user set during this current process useglobalmpscredentials When set to true, any device using mpsusername and mpspass in config.json are allowed to connect. When set to false, MPS validates credentials sent by AMT device using credentials.json. country name of country company name of company debug debug option set to true or false listenany listen to any set to true or false https set to true to enable TLS on HTTP server mpstlsoffload set to true to run MPS without TLS webport Port used by WebServer (or HTTP server) generateCertificates Generates certificates automatically. When set to true, SSL and Root cert are generated and stored in private folder loggeroff : Logging is enabled by default. Set to true to disable logging. mpusername and mpspass can be set to whatever credentials you choose to set, at this time. This will math the mpsusername and mpspass in other config files edited during this process. For example: { \"usewhitelist\" : false, \"commonName\": \"iot-demosetup.lab.local.com\", \"mpsport\": 4433, \"mpsusername\": \"standalone\", \"mpspass\": \"G@ppm0ym\", \"useglobalmpscredentials\": true, \"country\": \"US\", \"company\": \"NoCorp\", \"debug\": true, \"listenany\": true, \"https\": true, \"mpstlsoffload\": false, \"webport\" : 3000, \"generateCertificates\": true, \"loggeroff\": true } 3. Add/modify credentials.json \u00b6 If not in the ~/MPS/private directory, navigate to the private directory within the MPS directory. cp credentials.json.sample credentials.json AMT GUID Each AMT device has a unique identifier (GUID) assigned to it by default. This GUID will be used as the reference to each device record. To obtain the GUID on the AMT device, open a command prompt, navigate to where meshcmd.exe resides, and run meshcmd amtuuid . The GUID will display. Option Description name AMT hostname or user friendly identifier mpsuser AMT Device uses this as the user name while connecting to MPS. This is set once by the developer mpspass AMT Device uses this as the password while connecting to MPS. This is set once by the developer amtuser MPS uses this as the AMT user name when making AMT API calls (WSMAN or Redirection). This is the username set in the AMT configuration amtpass MPS uses this as the AMT password when making AMT API calls (WSMAN or Redirection). This is the password set during AMT configuration AMT and MPS password security recommendation Intel highly recommends that you don't use same password for MPS AMT. An example strong password would contain: at least eight characters at least one uppercase letter one lowercase letter one digit one special character For example: { \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" : { \"name\" : \"Win7-machine\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"G@ppm0ym\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"G@ppm0ym\" }, \"bf49cf00-9164-11e4-952b-b8aeed7ec594\" : { \"name\" : \"Ubuntu-machine\" , \"mpsuser\" : \"xenial\" , \"mpspass\" : \"G@ppm0ym\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"G@ppm0ym\" } } 4. Add/modify guids.json \u00b6 If usewhitelist is set to true in the config.json file, add a guids.json file in private directory to whitelist AMT GUIDs that are allowed to connect to MPS. Use guids.json.sample as an reference to create the guids.json and populate it with guids for whitelisting. This file is used to simulate whitelisting based on AMT GUIDs. Navigate to the ~/MPS/private directory. cd ~/MPS/private Create the guids.json file. cp credentials.json.sample credentials.json Edit this file to include your GUID(s). The GUID can be found using meshcommander. On the device with AMT activated, change to the directory where meshcmd.exe was downloaded. For example For example: [ \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" , \"12345678-9abc-def1-2345-123456789000\" ] 5. Start the server \u00b6 Navigate to the MPS directory. Run the following commands: npm install npm start This will install all the dependencies and start the server. Webserver (or HTTPS server) runs on port 3000 by default and MPS Server listens on port 4433. Certificates are generated and stored in private folder. 6. Connect an AMT device \u00b6 Make sure the AMT device is connected to the internet. On the device, browse to the MPS server using the IP address or domain Example URL : https://MPS-IPaddress:3000 Click Download MESCRIPT . This will download a cira_setup.mescript file. MEScript MEScript files are used by MeshCMD to execute a series of actions on the AMT device. Next, locate the meshcommander.exe download previously. Browse to the folder where MEScript and MeshCMD are downloaded. Open an elevated or administrator command prompt or cli. Run the below command. This runs a script that does all the configuration required for CIRA setup. Specifies the root certificate that the Firmware (ME) should use for TLS negotiation. Specifies the login credentials that the Firmware should use when connecting to MPS. Specifies the periodic connection time the Firmware should use to maintain MPS connection. Specifies the home domain suffix used to enable environment detection (When device is outside the home domain, AMT uses CIRA to connect to MPS). meshcmd.exe amtscript --script cira_setup.mescript --pass <amt password> The device will now connect to the MPS Server. Device credentials Make sure that AMT guid entry is present in credential.json file. Also include the AMT guid in guids.json file if usewhitelist is set to true in config.json file.","title":"Getting started"},{"location":"#get-started","text":"The instructions in this document offers the following guidance: Set up the Management Presence Server Modify json configuration sample files Connect to an activated AMT device","title":"Get started"},{"location":"#overview-of-the-management-presence-server-mps","text":"MPS is cloud agnostic microservice that enables Intel AMT-based platforms connecting over the Internet to connect securely to manageability consoles. The image below is a representation of using MPS server connected to an activated AMT device.","title":"Overview of the Management Presence Server (MPS)"},{"location":"#requirements-for-mps-server","text":"","title":"Requirements for MPS Server"},{"location":"#software-requirements","text":"git node.js v10 or greater","title":"Software Requirements"},{"location":"#hardware-requirements","text":"Activated Device with Intel\u00ae AMT Computer or device used to connect to MPS server Computer or device to connect the client console","title":"Hardware Requirements"},{"location":"#supported-platforms","text":"The MPS server can run on all platforms that support node.js. One consideration is exposing ports on the server used to run MPS. Typically, these are: 3000 4433","title":"Supported Platforms"},{"location":"#mps-server-set-up","text":"The instructions below are performed on the MPS server. To begin, run a platform that supports nodejs. Example: Virtual Machine with nodejs support Dedicated Server with nodejs support Once the software pre-requisites are met for the MPS, you can begin the rest of the set up of MPS.","title":"MPS Server: Set Up"},{"location":"#1-clone-the-repository","text":"git clone https://github.com/open-amt-cloud-toolkit/MPS.git cd MPS","title":"1. Clone the repository"},{"location":"#2-addmodify-configjson","text":"Navigate to the private directory within the MPS directory, cd ~/MPS/private Create a config.json file. *Copy the example file in the directory. cp config.json.example config.json These following parameters can be configured. Option Description usewhitelist set to true to whitelist AMT GUIDs stored in guids.json commonName used in self signed certificate, can be either FQDN or IP address mpsport port mpsusername new username for mpsusername set during this current process mpspass new password for the user set during this current process useglobalmpscredentials When set to true, any device using mpsusername and mpspass in config.json are allowed to connect. When set to false, MPS validates credentials sent by AMT device using credentials.json. country name of country company name of company debug debug option set to true or false listenany listen to any set to true or false https set to true to enable TLS on HTTP server mpstlsoffload set to true to run MPS without TLS webport Port used by WebServer (or HTTP server) generateCertificates Generates certificates automatically. When set to true, SSL and Root cert are generated and stored in private folder loggeroff : Logging is enabled by default. Set to true to disable logging. mpusername and mpspass can be set to whatever credentials you choose to set, at this time. This will math the mpsusername and mpspass in other config files edited during this process. For example: { \"usewhitelist\" : false, \"commonName\": \"iot-demosetup.lab.local.com\", \"mpsport\": 4433, \"mpsusername\": \"standalone\", \"mpspass\": \"G@ppm0ym\", \"useglobalmpscredentials\": true, \"country\": \"US\", \"company\": \"NoCorp\", \"debug\": true, \"listenany\": true, \"https\": true, \"mpstlsoffload\": false, \"webport\" : 3000, \"generateCertificates\": true, \"loggeroff\": true }","title":"2. Add/modify config.json"},{"location":"#3-addmodify-credentialsjson","text":"If not in the ~/MPS/private directory, navigate to the private directory within the MPS directory. cp credentials.json.sample credentials.json AMT GUID Each AMT device has a unique identifier (GUID) assigned to it by default. This GUID will be used as the reference to each device record. To obtain the GUID on the AMT device, open a command prompt, navigate to where meshcmd.exe resides, and run meshcmd amtuuid . The GUID will display. Option Description name AMT hostname or user friendly identifier mpsuser AMT Device uses this as the user name while connecting to MPS. This is set once by the developer mpspass AMT Device uses this as the password while connecting to MPS. This is set once by the developer amtuser MPS uses this as the AMT user name when making AMT API calls (WSMAN or Redirection). This is the username set in the AMT configuration amtpass MPS uses this as the AMT password when making AMT API calls (WSMAN or Redirection). This is the password set during AMT configuration AMT and MPS password security recommendation Intel highly recommends that you don't use same password for MPS AMT. An example strong password would contain: at least eight characters at least one uppercase letter one lowercase letter one digit one special character For example: { \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" : { \"name\" : \"Win7-machine\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"G@ppm0ym\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"G@ppm0ym\" }, \"bf49cf00-9164-11e4-952b-b8aeed7ec594\" : { \"name\" : \"Ubuntu-machine\" , \"mpsuser\" : \"xenial\" , \"mpspass\" : \"G@ppm0ym\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"G@ppm0ym\" } }","title":"3. Add/modify credentials.json"},{"location":"#4-addmodify-guidsjson","text":"If usewhitelist is set to true in the config.json file, add a guids.json file in private directory to whitelist AMT GUIDs that are allowed to connect to MPS. Use guids.json.sample as an reference to create the guids.json and populate it with guids for whitelisting. This file is used to simulate whitelisting based on AMT GUIDs. Navigate to the ~/MPS/private directory. cd ~/MPS/private Create the guids.json file. cp credentials.json.sample credentials.json Edit this file to include your GUID(s). The GUID can be found using meshcommander. On the device with AMT activated, change to the directory where meshcmd.exe was downloaded. For example For example: [ \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" , \"12345678-9abc-def1-2345-123456789000\" ]","title":"4. Add/modify guids.json"},{"location":"#5-start-the-server","text":"Navigate to the MPS directory. Run the following commands: npm install npm start This will install all the dependencies and start the server. Webserver (or HTTPS server) runs on port 3000 by default and MPS Server listens on port 4433. Certificates are generated and stored in private folder.","title":"5. Start the server"},{"location":"#6-connect-an-amt-device","text":"Make sure the AMT device is connected to the internet. On the device, browse to the MPS server using the IP address or domain Example URL : https://MPS-IPaddress:3000 Click Download MESCRIPT . This will download a cira_setup.mescript file. MEScript MEScript files are used by MeshCMD to execute a series of actions on the AMT device. Next, locate the meshcommander.exe download previously. Browse to the folder where MEScript and MeshCMD are downloaded. Open an elevated or administrator command prompt or cli. Run the below command. This runs a script that does all the configuration required for CIRA setup. Specifies the root certificate that the Firmware (ME) should use for TLS negotiation. Specifies the login credentials that the Firmware should use when connecting to MPS. Specifies the periodic connection time the Firmware should use to maintain MPS connection. Specifies the home domain suffix used to enable environment detection (When device is outside the home domain, AMT uses CIRA to connect to MPS). meshcmd.exe amtscript --script cira_setup.mescript --pass <amt password> The device will now connect to the MPS Server. Device credentials Make sure that AMT guid entry is present in credential.json file. Also include the AMT guid in guids.json file if usewhitelist is set to true in config.json file.","title":"6. Connect an AMT device"},{"location":"activateAMT/","text":"Activate the Device with Intel\u00ae Active Management Technology or Intel\u00ae AMT \u00b6 Video Link Detailed Setup document Steps to Activate Intel\u00ae Active Management Technology or Intel\u00ae AMT \u00b6 Connect a device to a Monitor and power up. The Intel\u00ae AMT platform displays the BIOS startup screen during power up, then processes the BIOS Extensions. Entry into the Intel\u00ae AMT BIOS Extension (MEBx) is BIOS vendor-dependent. If you are using an Intel\u00ae AMT reference platform (SDS or SDP), the display screen prompts you to press Ctrl+P . Then, the control passes to the Intel\u00ae Converged Security and Management Engine (Intel\u00ae CSME) or MEBx main menu. Enter the Intel\u00ae CSME default password admin . Change the default password (required to proceed). From the Main Menu , select Intel\u00ae AMT Configuration . Manageability Feature Selection : Select/Verify this is set to - Enabled . Activate Network Access : Select this option. Then, select Y to confirm AMT activation. Network Setup . Select this option. Then, select Intel ME Network Name Settings . Enter Host Name (Not a mandatory step). SOL/Storage Redirection/KVM : Select this option. Enable all the required features - Username and Password, SOL, Storage Redirection and KVM Feature Selection. User Consent : By default, this is set for KVM only ; Change this to NONE . Save and Exit Intel\u00ae CSME (or MEBx). When the AMT device platform or operating system opens, connect to the internet, via an ethernet cable (wifi support not available). Download the MeshCMD suitable to your device platform from the Meshcommander.com site . Note : Document or remember the download location of meshcmd.exe as you will need to run this later to get the GUID. Add new device For an OEM system, it is easy to use the one-time boot menu, although entry into Intel\u00ae CSME is usually an included option as part of the one-time boot menu. The exact key sequence varies by OEM, BIOS and Model. New passwords must be a strong. These should contain a minimum of the following: 8 characters one Uppercase letter one lowercase letter one digit one special character","title":"Activate AMT"},{"location":"activateAMT/#activate-the-device-with-intel-active-management-technology-or-intel-amt","text":"Video Link Detailed Setup document","title":"Activate the Device with Intel&reg; Active Management Technology or Intel&reg; AMT"},{"location":"activateAMT/#steps-to-activate-intel-active-management-technology-or-intel-amt","text":"Connect a device to a Monitor and power up. The Intel\u00ae AMT platform displays the BIOS startup screen during power up, then processes the BIOS Extensions. Entry into the Intel\u00ae AMT BIOS Extension (MEBx) is BIOS vendor-dependent. If you are using an Intel\u00ae AMT reference platform (SDS or SDP), the display screen prompts you to press Ctrl+P . Then, the control passes to the Intel\u00ae Converged Security and Management Engine (Intel\u00ae CSME) or MEBx main menu. Enter the Intel\u00ae CSME default password admin . Change the default password (required to proceed). From the Main Menu , select Intel\u00ae AMT Configuration . Manageability Feature Selection : Select/Verify this is set to - Enabled . Activate Network Access : Select this option. Then, select Y to confirm AMT activation. Network Setup . Select this option. Then, select Intel ME Network Name Settings . Enter Host Name (Not a mandatory step). SOL/Storage Redirection/KVM : Select this option. Enable all the required features - Username and Password, SOL, Storage Redirection and KVM Feature Selection. User Consent : By default, this is set for KVM only ; Change this to NONE . Save and Exit Intel\u00ae CSME (or MEBx). When the AMT device platform or operating system opens, connect to the internet, via an ethernet cable (wifi support not available). Download the MeshCMD suitable to your device platform from the Meshcommander.com site . Note : Document or remember the download location of meshcmd.exe as you will need to run this later to get the GUID. Add new device For an OEM system, it is easy to use the one-time boot menu, although entry into Intel\u00ae CSME is usually an included option as part of the one-time boot menu. The exact key sequence varies by OEM, BIOS and Model. New passwords must be a strong. These should contain a minimum of the following: 8 characters one Uppercase letter one lowercase letter one digit one special character","title":"Steps to Activate Intel&reg; Active Management Technology or Intel&reg; AMT"},{"location":"api/","text":"Server \u00b6 url : '{protocol}://{host}:{port}' variables : protocol : enum : - http - https default : https host : default : 'localhost' port : enum : - '3000' default : '3000' REST API \u00b6 Base path \u00b6 /amt/ /admin/ Example: \u00b6 url: https://localhost:3000/amt HTTP Method \u00b6 POST Request body \u00b6 Method in the request body tells the action that can be performed on the client device. Payload will vary with each method and by default contains the guid of the client details. Click here to find the currently supported methods and examples in detail. requestBody : content : application/json : schema : type : object properties : apiKey : type : string method : type : string payload : type : object required : - apiKey - method - payload Response body \u00b6 Success response would vary with each method that is requested. Below is the generic pattern for the error codes. response : content : application/json; charset=utf-8 : schema : properties : status : type : number error : type : string Click here for supported input and output types. Example Value '200' : { \"ResponseBody\" : responseBody } '400' : { \"status\" : 400 , \"error\" : \"Request missing amt guid\" } '404' : { \"status\" : 404 , \"error\" : \"Device not found/connected. Please connect again using CIRA\" } '408' : { \"status\" : 408 , \"error\" : \"Timeout error\" } '500' : { \"status\" : 500 , \"error\" : \"Internal server error\" } WebSocket \u00b6 Base path \u00b6 /relay/ /notifications/","title":"API"},{"location":"api/#server","text":"url : '{protocol}://{host}:{port}' variables : protocol : enum : - http - https default : https host : default : 'localhost' port : enum : - '3000' default : '3000'","title":"Server"},{"location":"api/#rest-api","text":"","title":"REST API"},{"location":"api/#base-path","text":"/amt/ /admin/","title":"Base path"},{"location":"api/#example","text":"url: https://localhost:3000/amt","title":"Example:"},{"location":"api/#http-method","text":"POST","title":"HTTP Method"},{"location":"api/#request-body","text":"Method in the request body tells the action that can be performed on the client device. Payload will vary with each method and by default contains the guid of the client details. Click here to find the currently supported methods and examples in detail. requestBody : content : application/json : schema : type : object properties : apiKey : type : string method : type : string payload : type : object required : - apiKey - method - payload","title":"Request body"},{"location":"api/#response-body","text":"Success response would vary with each method that is requested. Below is the generic pattern for the error codes. response : content : application/json; charset=utf-8 : schema : properties : status : type : number error : type : string Click here for supported input and output types. Example Value '200' : { \"ResponseBody\" : responseBody } '400' : { \"status\" : 400 , \"error\" : \"Request missing amt guid\" } '404' : { \"status\" : 404 , \"error\" : \"Device not found/connected. Please connect again using CIRA\" } '408' : { \"status\" : 408 , \"error\" : \"Timeout error\" } '500' : { \"status\" : 500 , \"error\" : \"Internal server error\" }","title":"Response body"},{"location":"api/#websocket","text":"","title":"WebSocket"},{"location":"api/#base-path_1","text":"/relay/ /notifications/","title":"Base path"},{"location":"devmode/","text":"Developer mode \u00b6 Intro \u00b6 Developer mode disables database and vault external dependencies and instead uses local flat files for device credentials, domains and profiles. When the Developer mode switch is set to true, vault and database options are turned off regardless of configuration. MPS \u00b6 - Config.json option: - \"Usevault\" - true - store device credentials in vault. - false - store device credentials in json file configured in \"credentialspath\". - \"developermode\" - true - forces \"Usevault\" to false. - false - no affect. RPS \u00b6 - app.config.dev.json options: - \"VaultConfig:usevault\" - true - stores device credentials, as well as domain and profile passwords in vault. - false - store device credentials in json file. - \"DbConfig:useDbForConfig\" - true - stores domain and profile information in the database. - false - store profile and domain information in app.config.dev.json and device credentials in json file referred in config option \"credentialspath\". - \"Devmode\" - true - forces \"VaultConfig:usevault\" and \"DbConfig:useDbForConfig\" to false. - false - no affect. .env setting \u00b6 - \"DEVELOPER_MODE\" - enables developer mode for mps and rps. - \"USEVAULT\" - enables vault use in mps and rps. - \"USE_DB_PROFILES\" - rps stores domains and profiles in database. Note: when \"USEVAULT\" is set to true, passwords are stored in vault for domains and profiles. - \"RPS_CREDENTIALS_PATH\" - rps path for json credential file for device credentials. - \"CREDENTIALS_PATH\" - mps path for json credential file for device credentials.","title":"Developer mode"},{"location":"devmode/#developer-mode","text":"","title":"Developer mode"},{"location":"devmode/#intro","text":"Developer mode disables database and vault external dependencies and instead uses local flat files for device credentials, domains and profiles. When the Developer mode switch is set to true, vault and database options are turned off regardless of configuration.","title":"Intro"},{"location":"devmode/#mps","text":"- Config.json option: - \"Usevault\" - true - store device credentials in vault. - false - store device credentials in json file configured in \"credentialspath\". - \"developermode\" - true - forces \"Usevault\" to false. - false - no affect.","title":"MPS"},{"location":"devmode/#rps","text":"- app.config.dev.json options: - \"VaultConfig:usevault\" - true - stores device credentials, as well as domain and profile passwords in vault. - false - store device credentials in json file. - \"DbConfig:useDbForConfig\" - true - stores domain and profile information in the database. - false - store profile and domain information in app.config.dev.json and device credentials in json file referred in config option \"credentialspath\". - \"Devmode\" - true - forces \"VaultConfig:usevault\" and \"DbConfig:useDbForConfig\" to false. - false - no affect.","title":"RPS"},{"location":"devmode/#env-setting","text":"- \"DEVELOPER_MODE\" - enables developer mode for mps and rps. - \"USEVAULT\" - enables vault use in mps and rps. - \"USE_DB_PROFILES\" - rps stores domains and profiles in database. Note: when \"USEVAULT\" is set to true, passwords are stored in vault for domains and profiles. - \"RPS_CREDENTIALS_PATH\" - rps path for json credential file for device credentials. - \"CREDENTIALS_PATH\" - mps path for json credential file for device credentials.","title":".env setting"},{"location":"license/","text":"License \u00b6 Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright 2019 Intel Corporation Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"license/#license","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright 2019 Intel Corporation Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"release-notes/","text":"Release Notes \u00b6 MPS V1 \u00b6 MPS server migrated to typescript project from traditional node js. All the REST API interfaces are changed to new interfaces.Now, there are four end points which are categarized based on the functionality. /admin - for all the admin user operations like downloading mescript, root certificate, disconnected device etc. /amt - for all AMT operations /relay - for KVM operations /notifications - fo updating the device connections. Known Defects \u00b6 Under high pressure, device responds as timed out. Make sure you give 30 to 60 seconds before proceeding.","title":"Release notes"},{"location":"release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/#mps-v1","text":"MPS server migrated to typescript project from traditional node js. All the REST API interfaces are changed to new interfaces.Now, there are four end points which are categarized based on the functionality. /admin - for all the admin user operations like downloading mescript, root certificate, disconnected device etc. /amt - for all AMT operations /relay - for KVM operations /notifications - fo updating the device connections.","title":"MPS V1"},{"location":"release-notes/#known-defects","text":"Under high pressure, device responds as timed out. Make sure you give 30 to 60 seconds before proceeding.","title":"Known Defects"},{"location":"methods/alldevices/","text":"Admin Methods \u00b6 All Devices \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"AllDevices\" , \"payload\" :{} } Example: Success ResponseBody \u00b6 [ { \"name\" : \"Win7-machine\" , \"mpsuser\" : \"standalone\" , \"amtuser\" : \"admin\" , \"host\" : \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" , \"icon\" : 1 , \"conn\" : 1 }, { \"name\" : \"Ubuntu-machine\" , \"mpsuser\" : \"xenial\" , \"amtuser\" : \"admin\" , \"host\" : \"bf49cf00-9164-11e4-952b-b8aeed7ec594\" , \"icon\" : 1 , \"conn\" : 0 } ]","title":"All Devices"},{"location":"methods/alldevices/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/alldevices/#all-devices","text":"Click here for supported input and output types.","title":"All Devices"},{"location":"methods/alldevices/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"AllDevices\" , \"payload\" :{} }","title":"Example: Request Body"},{"location":"methods/alldevices/#example-success-responsebody","text":"[ { \"name\" : \"Win7-machine\" , \"mpsuser\" : \"standalone\" , \"amtuser\" : \"admin\" , \"host\" : \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" , \"icon\" : 1 , \"conn\" : 1 }, { \"name\" : \"Ubuntu-machine\" , \"mpsuser\" : \"xenial\" , \"amtuser\" : \"admin\" , \"host\" : \"bf49cf00-9164-11e4-952b-b8aeed7ec594\" , \"icon\" : 1 , \"conn\" : 0 } ]","title":"Example: Success ResponseBody"},{"location":"methods/auditlog/","text":"AMT Audit logs \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"AuditLog\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"logsPerPage\" : 10 , \"page\" : 5 , \"startDate\" : \"2019-04-11\" , \"endDate\" : \"2019-04-18\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ [ { \"auditAppID\" : 21 , \"eventID\" : 0 , \"initiatorType\" : 0 , \"auditApp\" : \"Network Time\" , \"event\" : \"Intel(R) ME Time Set\" , \"initiator\" : \"$$OsAdmin\" , \"time\" : \"2003-12-29T05:46:37.000Z\" , \"mcLocationType\" : 102 , \"netAddress\" : \" \\u0000 \\t127.0.0.1 \\u0004 Z-=\u00ef\u00bf\u00bd\" , \"ex\" :{ \"type\" : \"Buffer\" , \"data\" :[ ] }, \"exStr\" : \"Invalid Date\" }, { \"auditAppID\" : 21 , \"eventID\" : 0 , \"initiatorType\" : 0 , \"auditApp\" : \"Network Time\" , \"event\" : \"Intel(R) ME Time Set\" , \"initiator\" : \"$$OsAdmin\" , \"time\" : \"2017-12-21T17:30:39.000Z\" , \"mcLocationType\" : 189 , \"netAddress\" : \" \\u0000 \\t1\" , \"ex\" :{ \"type\" : \"Buffer\" , \"data\" :[ 55 , 46 , 48 , 46 , 48 , 46 , 49 , 4 , 90 , 59 , 239 , 191 , 189 , 62 ] }, \"exStr\" : \"5/3/1999, 11:24:30 PM\" } ] } }","title":"Audit log"},{"location":"methods/auditlog/#amt-audit-logs","text":"Click here for supported input and output types.","title":"AMT Audit logs"},{"location":"methods/auditlog/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"AuditLog\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"logsPerPage\" : 10 , \"page\" : 5 , \"startDate\" : \"2019-04-11\" , \"endDate\" : \"2019-04-18\" } }","title":"Example: Request Body"},{"location":"methods/auditlog/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ [ { \"auditAppID\" : 21 , \"eventID\" : 0 , \"initiatorType\" : 0 , \"auditApp\" : \"Network Time\" , \"event\" : \"Intel(R) ME Time Set\" , \"initiator\" : \"$$OsAdmin\" , \"time\" : \"2003-12-29T05:46:37.000Z\" , \"mcLocationType\" : 102 , \"netAddress\" : \" \\u0000 \\t127.0.0.1 \\u0004 Z-=\u00ef\u00bf\u00bd\" , \"ex\" :{ \"type\" : \"Buffer\" , \"data\" :[ ] }, \"exStr\" : \"Invalid Date\" }, { \"auditAppID\" : 21 , \"eventID\" : 0 , \"initiatorType\" : 0 , \"auditApp\" : \"Network Time\" , \"event\" : \"Intel(R) ME Time Set\" , \"initiator\" : \"$$OsAdmin\" , \"time\" : \"2017-12-21T17:30:39.000Z\" , \"mcLocationType\" : 189 , \"netAddress\" : \" \\u0000 \\t1\" , \"ex\" :{ \"type\" : \"Buffer\" , \"data\" :[ 55 , 46 , 48 , 46 , 48 , 46 , 49 , 4 , 90 , 59 , 239 , 191 , 189 , 62 ] }, \"exStr\" : \"5/3/1999, 11:24:30 PM\" } ] } }","title":"Example : Success ResponseBody"},{"location":"methods/connecteddevices/","text":"Admin Methods \u00b6 Connected Devices \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"ConnectedDevices\" , \"payload\" :{} } Example : Success ResponseBody \u00b6 [ { \"name\" : \"Win7-machine\" , \"mpsuser\" : \"standalone\" , \"amtuser\" : \"admin\" , \"host\" : \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" , \"icon\" : 1 , \"conn\" : 1 } ]","title":"Connected Devices"},{"location":"methods/connecteddevices/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/connecteddevices/#connected-devices","text":"Click here for supported input and output types.","title":"Connected Devices"},{"location":"methods/connecteddevices/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"ConnectedDevices\" , \"payload\" :{} }","title":"Example: Request Body"},{"location":"methods/connecteddevices/#example-success-responsebody","text":"[ { \"name\" : \"Win7-machine\" , \"mpsuser\" : \"standalone\" , \"amtuser\" : \"admin\" , \"host\" : \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" , \"icon\" : 1 , \"conn\" : 1 } ]","title":"Example : Success ResponseBody"},{"location":"methods/disconnect/","text":"Admin Methods \u00b6 Disconnect Device \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"Disconnect\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 { \"success\" : 200 , \"description\" : \"CIRA connection disconnected : 038d0240-045c-05f4-7706-980700080009\" }","title":"Disconnect"},{"location":"methods/disconnect/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/disconnect/#disconnect-device","text":"Click here for supported input and output types.","title":"Disconnect Device"},{"location":"methods/disconnect/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"Disconnect\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/disconnect/#example-success-responsebody","text":"{ \"success\" : 200 , \"description\" : \"CIRA connection disconnected : 038d0240-045c-05f4-7706-980700080009\" }","title":"Example : Success ResponseBody"},{"location":"methods/eventlog/","text":"AMT Event logs \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"EventLog\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"logsPerPage\" : 10 , \"page\" : 5 , \"startDate\" : \"2019-04-11\" , \"endDate\" : \"2019-04-18\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ [ { \"deviceAddress\" : 255 , \"eventSensorType\" : 15 , \"eventType\" : 111 , \"eventOffset\" : 2 , \"eventSourceType\" : 104 , \"eventSeverity\" : 1 , \"sensorNumber\" : 255 , \"entity\" : 11 , \"entityInstance\" : 0 , \"eventData\" :[ 64 , 8 , 0 , 0 , 0 , 0 , 0 , 0 ], \"time\" : \"2019-04-11T17:57:40.000Z\" , \"entityStr\" : \"Add in card\" , \"desc\" : \"Option ROM initialization\" }, { \"deviceAddress\" : 255 , \"eventSensorType\" : 15 , \"eventType\" : 111 , \"eventOffset\" : 2 , \"eventSourceType\" : 104 , \"eventSeverity\" : 1 , \"sensorNumber\" : 255 , \"entity\" : 34 , \"entityInstance\" : 0 , \"eventData\" :[ 64 , 6 , 0 , 0 , 0 , 0 , 0 , 0 ], \"time\" : \"2019-04-11T17:57:39.000Z\" , \"entityStr\" : \"BIOS\" , \"desc\" : \"USB resource configuration\" } ] } }","title":"Event log"},{"location":"methods/eventlog/#amt-event-logs","text":"Click here for supported input and output types.","title":"AMT Event logs"},{"location":"methods/eventlog/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"EventLog\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"logsPerPage\" : 10 , \"page\" : 5 , \"startDate\" : \"2019-04-11\" , \"endDate\" : \"2019-04-18\" } }","title":"Example: Request Body"},{"location":"methods/eventlog/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ [ { \"deviceAddress\" : 255 , \"eventSensorType\" : 15 , \"eventType\" : 111 , \"eventOffset\" : 2 , \"eventSourceType\" : 104 , \"eventSeverity\" : 1 , \"sensorNumber\" : 255 , \"entity\" : 11 , \"entityInstance\" : 0 , \"eventData\" :[ 64 , 8 , 0 , 0 , 0 , 0 , 0 , 0 ], \"time\" : \"2019-04-11T17:57:40.000Z\" , \"entityStr\" : \"Add in card\" , \"desc\" : \"Option ROM initialization\" }, { \"deviceAddress\" : 255 , \"eventSensorType\" : 15 , \"eventType\" : 111 , \"eventOffset\" : 2 , \"eventSourceType\" : 104 , \"eventSeverity\" : 1 , \"sensorNumber\" : 255 , \"entity\" : 34 , \"entityInstance\" : 0 , \"eventData\" :[ 64 , 6 , 0 , 0 , 0 , 0 , 0 , 0 ], \"time\" : \"2019-04-11T17:57:39.000Z\" , \"entityStr\" : \"BIOS\" , \"desc\" : \"USB resource configuration\" } ] } }","title":"Example : Success ResponseBody"},{"location":"methods/generalsettings/","text":"AMT General Settings \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"GeneralSettings\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" : { \"amtNetworkEnabled\" : 1 , \"ddnsPeriodicUpdateInterval\" : 1440 , \"ddnsTTL\" : 900 , \"ddnsUpdateByDHCPServerEnabled\" : true , \"ddnsUpdateEnabled\" : false , \"dhcpv6ConfigurationTimeout\" : 0 , \"digestRealm\" : \"Digest:A4070000000000000000000000000000\" , \"elementName\" : \"Intel(r) AMT: General Settings\" , \"hostName\" : \"Madhavi\" , \"hostOSFQDN\" : \"DESKTOP-1A99FM4\" , \"idleWakeTimeout\" : 65535 , \"instanceID\" : \"Intel(r) AMT: General Settings\" , \"networkInterfaceEnabled\" : true , \"pingResponseEnabled\" : true , \"powerSource\" : 0 , \"preferredAddressFamily\" : 0 , \"presenceNotificationInterval\" : 0 , \"privacyLevel\" : 0 , \"rmcpPingResponseEnabled\" : true , \"sharedFQDN\" : true , \"wsmanOnlyMode\" : false } }","title":"General settings"},{"location":"methods/generalsettings/#amt-general-settings","text":"Click here for supported input and output types.","title":"AMT General Settings"},{"location":"methods/generalsettings/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"GeneralSettings\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/generalsettings/#example-success-responsebody","text":"'200' : { \"ResponseBody\" : { \"amtNetworkEnabled\" : 1 , \"ddnsPeriodicUpdateInterval\" : 1440 , \"ddnsTTL\" : 900 , \"ddnsUpdateByDHCPServerEnabled\" : true , \"ddnsUpdateEnabled\" : false , \"dhcpv6ConfigurationTimeout\" : 0 , \"digestRealm\" : \"Digest:A4070000000000000000000000000000\" , \"elementName\" : \"Intel(r) AMT: General Settings\" , \"hostName\" : \"Madhavi\" , \"hostOSFQDN\" : \"DESKTOP-1A99FM4\" , \"idleWakeTimeout\" : 65535 , \"instanceID\" : \"Intel(r) AMT: General Settings\" , \"networkInterfaceEnabled\" : true , \"pingResponseEnabled\" : true , \"powerSource\" : 0 , \"preferredAddressFamily\" : 0 , \"presenceNotificationInterval\" : 0 , \"privacyLevel\" : 0 , \"rmcpPingResponseEnabled\" : true , \"sharedFQDN\" : true , \"wsmanOnlyMode\" : false } }","title":"Example : Success ResponseBody"},{"location":"methods/hardwareinfo/","text":"AMT Hadware Information \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"HardwareInformation\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" : { \"CIM_ComputerSystemPackage\" : { \"response\" : { \"antecedent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_Chassis\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_Chassis\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"CIM_Chassis\" , \"@name\" : \"Tag\" } ] } } }, \"dependent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"RreferenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_ComputerSystem\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"ManagedSystem\" , \"@name\" : \"Name\" } ] } } }, \"platformGUID\" : \"1095AC4BA6042143BAE2D45DDF07B684\" }, \"status\" : 200 }, \"CIM_SystemPackaging\" : { \"responses\" : [ { \"antecedent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_Chassis\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_Chassis\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"CIM_Chassis\" , \"@name\" : \"Tag\" } ] } } }, \"dependent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_ComputerSystem\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"ManagedSystem\" , \"@name\" : \"Name\" } ] } } }, \"platformGUID\" : \"1095AC4BA6042143BAE2D45DDF07B684\" } ], \"status\" : 200 }, \"CIM_Chassis\" : { \"response\" : { \"chassisPackageType\" : 0 , \"creationClassName\" : \"CIM_Chassis\" , \"elementName\" : \"Managed System Chassis\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNHE\" , \"operationalStatus\" : 0 , \"packageType\" : 3 , \"serialNumber\" : \"DW1646647500075\" , \"tag\" : \"CIM_Chassis\" , \"version\" : \"J57828-503\" }, \"status\" : 200 }, \"CIM_Chip\" : { \"responses\" : [ { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Chip\" , \"elementName\" : \"Managed System Processor Chip\" , \"manufacturer\" : \"Intel(R) Corporation\" , \"operationalStatus\" : 0 , \"tag\" : \"CPU 0\" , \"version\" : \"Intel(R) Core(TM) i5-7300U CPU @ 2.60GHz\" }, { \"bankLabel\" : \"BANK 0\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300C5\" , \"speed\" : 0 , \"tag\" : 9876543210 }, { \"bankLabel\" : \"BANK 2\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300BD\" , \"speed\" : 0 , \"tag\" : \"9876543210 (#2)\" } ], \"status\" : 200 }, \"CIM_Card\" : { \"response\" : { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Card\" , \"elementName\" : \"Managed System Base Board\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNB\" , \"operationalStatus\" : 0 , \"packageType\" : 9 , \"serialNumber\" : \"BTDN7490016E\" , \"tag\" : \"CIM_Card\" , \"version\" : \"J57626-503\" }, \"status\" : 200 }, \"CIM_BIOSElement\" : { \"response\" : { \"elementName\" : \"Primary BIOS\" , \"manufacturer\" : \"Intel Corp.\" , \"name\" : \"Primary BIOS\" , \"operationalStatus\" : 0 , \"primaryBIOS\" : true , \"releaseDate\" : { \"datetime\" : \"2018-03-15T00:00:00Z\" }, \"softwareElementID\" : \"DNKBLi5v.86A.0040.2018.0315.1451\" , \"softwareElementState\" : 2 , \"targetOperatingSystem\" : 66 , \"version\" : \"DNKBLi5v.86A.0040.2018.0315.1451\" }, \"status\" : 200 }, \"CIM_Processor\" : { \"responses\" : [ { \"cpuStatus\" : 1 , \"creationClassName\" : \"CIM_Processor\" , \"currentClockSpeed\" : 2500 , \"deviceID\" : \"CPU 0\" , \"elementName\" : \"Managed System CPU\" , \"enabledState\" : 2 , \"externalBusClockSpeed\" : 100 , \"family\" : 205 , \"healthState\" : 0 , \"maxClockSpeed\" : 8300 , \"operationalStatus\" : 0 , \"requestedState\" : 12 , \"role\" : \"Central\" , \"stepping\" : 9 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"ManagedSystem\" , \"upgradeMethod\" : 2 } ], \"status\" : 200 }, \"CIM_PhysicalMemory\" : { \"responses\" : [ { \"bankLabel\" : \"BANK 0\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300C5\" , \"speed\" : 0 , \"tag\" : 9876543210 }, { \"bankLabel\" : \"BANK 2\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300BD\" , \"speed\" : 0 , \"tag\" : \"9876543210 (#2)\" } ], \"status\" : 200 }, \"CIM_MediaAccessDevice\" : { \"responses\" : [ { \"capabilities\" : [ 4 , 10 ], \"creationClassName\" : \"CIM_MediaAccessDevice\" , \"deviceID\" : \"MEDIA DEV 0\" , \"elementName\" : \"Managed System Media Access Device\" , \"enabledDefault\" : 2 , \"enabledState\" : 0 , \"maxMediaSize\" : 250059350 , \"operationalStatus\" : 0 , \"requestedState\" : 12 , \"security\" : 2 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"ManagedSystem\" } ], \"status\" : 200 }, \"CIM_PhysicalPackage\" : { \"responses\" : [ { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Card\" , \"elementName\" : \"Managed System Base Board\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNB\" , \"operationalStatus\" : 0 , \"packageType\" : 9 , \"serialNumber\" : \"BTDN7490016E\" , \"tag\" : \"CIM_Card\" , \"version\" : \"J57626-503\" }, { \"creationClassName\" : \"CIM_PhysicalPackage\" , \"elementName\" : \"Managed System Storage Media Package\" , \"model\" : \"Samsung SSD 850 EVO M.2 250GB \" , \"operationalStatus\" : 0 , \"packageType\" : 15 , \"serialNumber\" : \"S33CNX0JC36654D \" , \"tag\" : \"Storage Media Package 0\" }, { \"chassisPackageType\" : 0 , \"creationClassName\" : \"CIM_Chassis\" , \"elementName\" : \"Managed System Chassis\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNHE\" , \"operationalStatus\" : 0 , \"packageType\" : 3 , \"serialNumber\" : \"DW1646647500075\" , \"tag\" : \"CIM_Chassis\" , \"version\" : \"J57828-503\" } ], \"status\" : 200 } } }","title":"Hardware information"},{"location":"methods/hardwareinfo/#amt-hadware-information","text":"Click here for supported input and output types.","title":"AMT Hadware Information"},{"location":"methods/hardwareinfo/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"HardwareInformation\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/hardwareinfo/#example-success-responsebody","text":"'200' : { \"ResponseBody\" : { \"CIM_ComputerSystemPackage\" : { \"response\" : { \"antecedent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_Chassis\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_Chassis\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"CIM_Chassis\" , \"@name\" : \"Tag\" } ] } } }, \"dependent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"RreferenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_ComputerSystem\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"ManagedSystem\" , \"@name\" : \"Name\" } ] } } }, \"platformGUID\" : \"1095AC4BA6042143BAE2D45DDF07B684\" }, \"status\" : 200 }, \"CIM_SystemPackaging\" : { \"responses\" : [ { \"antecedent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_Chassis\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_Chassis\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"CIM_Chassis\" , \"@name\" : \"Tag\" } ] } } }, \"dependent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_ComputerSystem\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"ManagedSystem\" , \"@name\" : \"Name\" } ] } } }, \"platformGUID\" : \"1095AC4BA6042143BAE2D45DDF07B684\" } ], \"status\" : 200 }, \"CIM_Chassis\" : { \"response\" : { \"chassisPackageType\" : 0 , \"creationClassName\" : \"CIM_Chassis\" , \"elementName\" : \"Managed System Chassis\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNHE\" , \"operationalStatus\" : 0 , \"packageType\" : 3 , \"serialNumber\" : \"DW1646647500075\" , \"tag\" : \"CIM_Chassis\" , \"version\" : \"J57828-503\" }, \"status\" : 200 }, \"CIM_Chip\" : { \"responses\" : [ { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Chip\" , \"elementName\" : \"Managed System Processor Chip\" , \"manufacturer\" : \"Intel(R) Corporation\" , \"operationalStatus\" : 0 , \"tag\" : \"CPU 0\" , \"version\" : \"Intel(R) Core(TM) i5-7300U CPU @ 2.60GHz\" }, { \"bankLabel\" : \"BANK 0\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300C5\" , \"speed\" : 0 , \"tag\" : 9876543210 }, { \"bankLabel\" : \"BANK 2\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300BD\" , \"speed\" : 0 , \"tag\" : \"9876543210 (#2)\" } ], \"status\" : 200 }, \"CIM_Card\" : { \"response\" : { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Card\" , \"elementName\" : \"Managed System Base Board\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNB\" , \"operationalStatus\" : 0 , \"packageType\" : 9 , \"serialNumber\" : \"BTDN7490016E\" , \"tag\" : \"CIM_Card\" , \"version\" : \"J57626-503\" }, \"status\" : 200 }, \"CIM_BIOSElement\" : { \"response\" : { \"elementName\" : \"Primary BIOS\" , \"manufacturer\" : \"Intel Corp.\" , \"name\" : \"Primary BIOS\" , \"operationalStatus\" : 0 , \"primaryBIOS\" : true , \"releaseDate\" : { \"datetime\" : \"2018-03-15T00:00:00Z\" }, \"softwareElementID\" : \"DNKBLi5v.86A.0040.2018.0315.1451\" , \"softwareElementState\" : 2 , \"targetOperatingSystem\" : 66 , \"version\" : \"DNKBLi5v.86A.0040.2018.0315.1451\" }, \"status\" : 200 }, \"CIM_Processor\" : { \"responses\" : [ { \"cpuStatus\" : 1 , \"creationClassName\" : \"CIM_Processor\" , \"currentClockSpeed\" : 2500 , \"deviceID\" : \"CPU 0\" , \"elementName\" : \"Managed System CPU\" , \"enabledState\" : 2 , \"externalBusClockSpeed\" : 100 , \"family\" : 205 , \"healthState\" : 0 , \"maxClockSpeed\" : 8300 , \"operationalStatus\" : 0 , \"requestedState\" : 12 , \"role\" : \"Central\" , \"stepping\" : 9 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"ManagedSystem\" , \"upgradeMethod\" : 2 } ], \"status\" : 200 }, \"CIM_PhysicalMemory\" : { \"responses\" : [ { \"bankLabel\" : \"BANK 0\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300C5\" , \"speed\" : 0 , \"tag\" : 9876543210 }, { \"bankLabel\" : \"BANK 2\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300BD\" , \"speed\" : 0 , \"tag\" : \"9876543210 (#2)\" } ], \"status\" : 200 }, \"CIM_MediaAccessDevice\" : { \"responses\" : [ { \"capabilities\" : [ 4 , 10 ], \"creationClassName\" : \"CIM_MediaAccessDevice\" , \"deviceID\" : \"MEDIA DEV 0\" , \"elementName\" : \"Managed System Media Access Device\" , \"enabledDefault\" : 2 , \"enabledState\" : 0 , \"maxMediaSize\" : 250059350 , \"operationalStatus\" : 0 , \"requestedState\" : 12 , \"security\" : 2 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"ManagedSystem\" } ], \"status\" : 200 }, \"CIM_PhysicalPackage\" : { \"responses\" : [ { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Card\" , \"elementName\" : \"Managed System Base Board\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNB\" , \"operationalStatus\" : 0 , \"packageType\" : 9 , \"serialNumber\" : \"BTDN7490016E\" , \"tag\" : \"CIM_Card\" , \"version\" : \"J57626-503\" }, { \"creationClassName\" : \"CIM_PhysicalPackage\" , \"elementName\" : \"Managed System Storage Media Package\" , \"model\" : \"Samsung SSD 850 EVO M.2 250GB \" , \"operationalStatus\" : 0 , \"packageType\" : 15 , \"serialNumber\" : \"S33CNX0JC36654D \" , \"tag\" : \"Storage Media Package 0\" }, { \"chassisPackageType\" : 0 , \"creationClassName\" : \"CIM_Chassis\" , \"elementName\" : \"Managed System Chassis\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNHE\" , \"operationalStatus\" : 0 , \"packageType\" : 3 , \"serialNumber\" : \"DW1646647500075\" , \"tag\" : \"CIM_Chassis\" , \"version\" : \"J57828-503\" } ], \"status\" : 200 } } }","title":"Example : Success ResponseBody"},{"location":"methods/mescript/","text":"Admin Methods \u00b6 MEScript \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"MEScript\" , \"payload\" :{} } ResponseBody \u00b6 Downloads ME Script file. Sample JavaScript code : $.ajax({ url : '/admin' , method : 'POST' , data : JSON.stringify(postdata), contentType : \"application/json\" , success : function (data) { var blob = new Blob([data], {type : \"application/octet-stream\" } ); var url = window.URL.createObjectURL(blob); var a = document.createElement('a'); a.setAttribute('hidden', ''); a.setAttribute('href', url); a.setAttribute('download', fileName); document.body.appendChild(a); a.click(); document.body.removeChild(a); window.URL.revokeObjectURL(url); }, error : function(error){ console.log(error); }","title":"MEScript"},{"location":"methods/mescript/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/mescript/#mescript","text":"Click here for supported input and output types.","title":"MEScript"},{"location":"methods/mescript/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"MEScript\" , \"payload\" :{} }","title":"Example: Request Body"},{"location":"methods/mescript/#responsebody","text":"Downloads ME Script file. Sample JavaScript code : $.ajax({ url : '/admin' , method : 'POST' , data : JSON.stringify(postdata), contentType : \"application/json\" , success : function (data) { var blob = new Blob([data], {type : \"application/octet-stream\" } ); var url = window.URL.createObjectURL(blob); var a = document.createElement('a'); a.setAttribute('hidden', ''); a.setAttribute('href', url); a.setAttribute('download', fileName); document.body.appendChild(a); a.click(); document.body.removeChild(a); window.URL.revokeObjectURL(url); }, error : function(error){ console.log(error); }","title":"ResponseBody"},{"location":"methods/poweraction/","text":"AMT Power action \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"PowerAction\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"action\" : 2 } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ \"returnValue\" : 0 , \"returnValueStr\" : \"SUCCESS\" }","title":"Power action"},{"location":"methods/poweraction/#amt-power-action","text":"Click here for supported input and output types.","title":"AMT Power action"},{"location":"methods/poweraction/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"PowerAction\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"action\" : 2 } }","title":"Example: Request Body"},{"location":"methods/poweraction/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ \"returnValue\" : 0 , \"returnValueStr\" : \"SUCCESS\" }","title":"Example : Success ResponseBody"},{"location":"methods/powercapabilities/","text":"AMT Power Capabilities \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"PowerCapabilities\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" : { \"powerUp\" : 2 , \"powerCycle\" : 5 , \"powerDown\" : 8 , \"reset\" : 10 , \"softOff\" : 12 , \"softReset\" : 14 , \"sleep\" : 4 , \"hibernate\" : 7 , \"powerUpToBIOS\" : 100 , \"resetToBIOS\" : 101 , \"resetToSecureErase\" : 104 , \"resetToIDE-RFloppy\" : 200 , \"powerOnToIDE-RFloppy\" : 201 , \"resetToIDE-RCDROM\" : 202 , \"powerOnToIDE-RCDROM\" : 203 , \"resetToPXE\" : 400 , \"powerOnToPXE\" : 401 }","title":"Power capabilities"},{"location":"methods/powercapabilities/#amt-power-capabilities","text":"Click here for supported input and output types.","title":"AMT Power Capabilities"},{"location":"methods/powercapabilities/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"PowerCapabilities\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/powercapabilities/#example-success-responsebody","text":"'200' : { \"ResponseBody\" : { \"powerUp\" : 2 , \"powerCycle\" : 5 , \"powerDown\" : 8 , \"reset\" : 10 , \"softOff\" : 12 , \"softReset\" : 14 , \"sleep\" : 4 , \"hibernate\" : 7 , \"powerUpToBIOS\" : 100 , \"resetToBIOS\" : 101 , \"resetToSecureErase\" : 104 , \"resetToIDE-RFloppy\" : 200 , \"powerOnToIDE-RFloppy\" : 201 , \"resetToIDE-RCDROM\" : 202 , \"powerOnToIDE-RCDROM\" : 203 , \"resetToPXE\" : 400 , \"powerOnToPXE\" : 401 }","title":"Example : Success ResponseBody"},{"location":"methods/powerstate/","text":"AMT Power state \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"PowerState\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ \"powerState\" : 2 }","title":"Power state"},{"location":"methods/powerstate/#amt-power-state","text":"Click here for supported input and output types.","title":"AMT Power state"},{"location":"methods/powerstate/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"PowerState\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/powerstate/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ \"powerState\" : 2 }","title":"Example : Success ResponseBody"},{"location":"methods/rootcertificate/","text":"Admin Methods \u00b6 MPS RootCertificate \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"MPSRootCertificate\" , \"payload\" :{} } ResponseBody \u00b6 Downloads MPS root certificate.","title":"MPS Root Certificate"},{"location":"methods/rootcertificate/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/rootcertificate/#mps-rootcertificate","text":"Click here for supported input and output types.","title":"MPS RootCertificate"},{"location":"methods/rootcertificate/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"MPSRootCertificate\" , \"payload\" :{} }","title":"Example: Request Body"},{"location":"methods/rootcertificate/#responsebody","text":"Downloads MPS root certificate.","title":"ResponseBody"},{"location":"methods/types/","text":"Types \u00b6 Request body \u00b6 requestBody { apiKey : string; method : string; payload : any; } Response error body \u00b6 responseErrorBody { status: number; error: string; } All Devices \u00b6 interface devices { name : string; mpsuser : string; mpspass : string; amtuser : string; amtpass : string; host : string; icon : number; conn : number; } Audit log \u00b6 auditLog { auditAppID : number; eventID : number; initiatorType : number; auditApp : string; event : string; initiator : string; time : Date; mcLocationType : number; netAddress : string; ex : { type : string; data : number [] ; } ; exStr : string; } Event log \u00b6 eventLog { deviceAddress : number; eventSensorType : number; eventType : number; eventOffset : number; eventSourceType : number; eventSeverity : number; sensorNumber : number; entity : number; entityInstance : number; eventData : number[]; time : Date; entityStr : string; desc : string; } General settings \u00b6 generalSettings { amtNetworkEnabled : number; ddnsPeriodicUpdateInterval : number; ddnsTTL : number; ddnsUpdateByDHCPServerEnabled : boolean; ddnsUpdateEnabled : boolean; dhcpv6ConfigurationTimeout : number; digestRealm : string; elementName : string; hostName : string; hostOSFQDN : string; idleWakeTimeout : number; instanceID : string; networkInterfaceEnabled : boolean; pingResponseEnabled : boolean; powerSource : number; preferredAddressFamily : number; presenceNotificationInterval : number; privacyLevel : number; rmcpPingResponseEnabled : boolean; sharedFQDN : boolean; wsmanOnlyMode : boolean; } Hardware information \u00b6 module hardwareDetails { selector { value : string; @name : string; } selectorSet { selector : selector[]; } referenceParameters { resourceURI : string; selectorSet : selectorSet; } antecedent { address : string; referenceParameters : referenceParameters; } dependent { address : string; referenceParameters : referenceParameters; } response { antecedent : antecedent; dependent : dependent; platformGUID : string; } cimComputerSystemPackage { response : response; status : number; } cimSystemPackagingResponses { antecedent : antecedent; dependent : dependent; platformGUID : string; } cimSystemPackaging { responses : cimSystemPackagingResponses[]; status : number; } cimChassisResponse { chassisPackageType : number; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; } cimChassis { response : cimChassisResponse; status : number; } cimChipRespons { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; operationalStatus : number; tag : any; version : string; bankLabel : string; capacity? : number; formFactor? : number; memoryType? : number; partNumber : string; serialNumber : string; speed? : number; } cimChip { responses : cimChipRespons[]; status : number; } cimCardResponse { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; } cimCard { response : cimCardResponse; status : number; } cimBIOSElementResponse { elementName : string; manufacturer : string; name : string; operationalStatus : number; primaryBIOS : boolean; releaseDate : { datetime : Date; } ; softwareElementID : string; softwareElementState : number; targetOperatingSystem : number; version : string; } cimBIOSElement { response : cimBIOSElementResponse; status : number; } cimProcessorResponses { cpuStatus : number; creationClassName : string; currentClockSpeed : number; deviceID : string; elementName : string; enabledState : number; externalBusClockSpeed : number; family : number; healthState : number; maxClockSpeed : number; operationalStatus : number; requestedState : number; role : string; stepping : number; systemCreationClassName : string; systemName : string; upgradeMethod : number; } cimProcessor { responses : cimProcessorResponses[]; status : number; } cimPhysicalMemoryResponses { bankLabel : string; capacity : any; creationClassName : string; elementName : string; formFactor : number; manufacturer : string; memoryType : number; partNumber : string; serialNumber : string; speed : number; tag : any; } cimPhysicalMemory { responses : cimPhysicalMemoryResponses[]; status : number; } cimMediaAccessDeviceResponses { capabilities : number[]; creationClassName : string; deviceID : string; elementName : string; enabledDefault : number; enabledState : number; maxMediaSize : number; operationalStatus : number; requestedState : number; security : number; systemCreationClassName : string; systemName : string; } cimMediaAccessDevice { responses : cimMediaAccessDeviceResponses[]; status : number; } cimPhysicalPackageResponses { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; chassisPackageType? : number; } cimPhysicalPackage { responses : cimPhysicalPackageResponses[]; status : number; } hardwareinfo { CIM_ComputerSystemPackage : cimComputerSystemPackage; CIM_SystemPackaging : cimSystemPackaging; CIM_Chassis : cimChassis; CIM_Chip : cimChip; CIM_Card : cimCard; CIM_BIOSElement : cimBIOSElement; CIM_Processor : cimProcessor; CIM_PhysicalMemory : cimPhysicalMemory; CIM_MediaAccessDevice : cimMediaAccessDevice; CIM_PhysicalPackage : cimPhysicalPackage; } } Power action \u00b6 powerAction { returnValue : number; returnValueStr : string; } Power capabilities \u00b6 powerCapabilities { powerUp : number; powerCycle : number; powerDown : number; reset : number; softOff : number; softReset : number; sleep : number; hibernate : number; powerUpToBIOS : number; resetToBIOS : number; resetToSecureErase : number; resetToIDE-RFloppy : number; powerOnToIDE-RFloppy : number; resetToIDE-RCDROM : number; powerOnToIDE-RCDROM : number; resetToPXE : number; powerOnToPXE : number; } Power state \u00b6 powerState { powerState : number; } Version \u00b6 module versionInfo { cimSoftwareIdentityResponses { instanceID : string; isEntity : boolean; versionString : any; } cimSoftwareIdentity { responses : cimSoftwareIdentityResponses[]; status : number; } amtSetupAndConfigurationServiceResponse { creationClassName : string; elementName : string; enabledState : number; name : string; passwordModel : number; provisioningMode : number; provisioningServerOTP : string; provisioningState : number; requestedState : number; systemCreationClassName : string; systemName : string; zeroTouchConfigurationEnabled : boolean; } amtSetupAndConfigurationService { response : amtSetupAndConfigurationServiceResponse; status : number; } version { CIM_SoftwareIdentity : cimSoftwareIdentity; AMT_SetupAndConfigurationService : amtSetupAndConfigurationServiceResponse; } }","title":"Version"},{"location":"methods/types/#types","text":"","title":"Types"},{"location":"methods/types/#request-body","text":"requestBody { apiKey : string; method : string; payload : any; }","title":"Request body"},{"location":"methods/types/#response-error-body","text":"responseErrorBody { status: number; error: string; }","title":"Response error body"},{"location":"methods/types/#all-devices","text":"interface devices { name : string; mpsuser : string; mpspass : string; amtuser : string; amtpass : string; host : string; icon : number; conn : number; }","title":"All Devices"},{"location":"methods/types/#audit-log","text":"auditLog { auditAppID : number; eventID : number; initiatorType : number; auditApp : string; event : string; initiator : string; time : Date; mcLocationType : number; netAddress : string; ex : { type : string; data : number [] ; } ; exStr : string; }","title":"Audit log"},{"location":"methods/types/#event-log","text":"eventLog { deviceAddress : number; eventSensorType : number; eventType : number; eventOffset : number; eventSourceType : number; eventSeverity : number; sensorNumber : number; entity : number; entityInstance : number; eventData : number[]; time : Date; entityStr : string; desc : string; }","title":"Event log"},{"location":"methods/types/#general-settings","text":"generalSettings { amtNetworkEnabled : number; ddnsPeriodicUpdateInterval : number; ddnsTTL : number; ddnsUpdateByDHCPServerEnabled : boolean; ddnsUpdateEnabled : boolean; dhcpv6ConfigurationTimeout : number; digestRealm : string; elementName : string; hostName : string; hostOSFQDN : string; idleWakeTimeout : number; instanceID : string; networkInterfaceEnabled : boolean; pingResponseEnabled : boolean; powerSource : number; preferredAddressFamily : number; presenceNotificationInterval : number; privacyLevel : number; rmcpPingResponseEnabled : boolean; sharedFQDN : boolean; wsmanOnlyMode : boolean; }","title":"General settings"},{"location":"methods/types/#hardware-information","text":"module hardwareDetails { selector { value : string; @name : string; } selectorSet { selector : selector[]; } referenceParameters { resourceURI : string; selectorSet : selectorSet; } antecedent { address : string; referenceParameters : referenceParameters; } dependent { address : string; referenceParameters : referenceParameters; } response { antecedent : antecedent; dependent : dependent; platformGUID : string; } cimComputerSystemPackage { response : response; status : number; } cimSystemPackagingResponses { antecedent : antecedent; dependent : dependent; platformGUID : string; } cimSystemPackaging { responses : cimSystemPackagingResponses[]; status : number; } cimChassisResponse { chassisPackageType : number; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; } cimChassis { response : cimChassisResponse; status : number; } cimChipRespons { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; operationalStatus : number; tag : any; version : string; bankLabel : string; capacity? : number; formFactor? : number; memoryType? : number; partNumber : string; serialNumber : string; speed? : number; } cimChip { responses : cimChipRespons[]; status : number; } cimCardResponse { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; } cimCard { response : cimCardResponse; status : number; } cimBIOSElementResponse { elementName : string; manufacturer : string; name : string; operationalStatus : number; primaryBIOS : boolean; releaseDate : { datetime : Date; } ; softwareElementID : string; softwareElementState : number; targetOperatingSystem : number; version : string; } cimBIOSElement { response : cimBIOSElementResponse; status : number; } cimProcessorResponses { cpuStatus : number; creationClassName : string; currentClockSpeed : number; deviceID : string; elementName : string; enabledState : number; externalBusClockSpeed : number; family : number; healthState : number; maxClockSpeed : number; operationalStatus : number; requestedState : number; role : string; stepping : number; systemCreationClassName : string; systemName : string; upgradeMethod : number; } cimProcessor { responses : cimProcessorResponses[]; status : number; } cimPhysicalMemoryResponses { bankLabel : string; capacity : any; creationClassName : string; elementName : string; formFactor : number; manufacturer : string; memoryType : number; partNumber : string; serialNumber : string; speed : number; tag : any; } cimPhysicalMemory { responses : cimPhysicalMemoryResponses[]; status : number; } cimMediaAccessDeviceResponses { capabilities : number[]; creationClassName : string; deviceID : string; elementName : string; enabledDefault : number; enabledState : number; maxMediaSize : number; operationalStatus : number; requestedState : number; security : number; systemCreationClassName : string; systemName : string; } cimMediaAccessDevice { responses : cimMediaAccessDeviceResponses[]; status : number; } cimPhysicalPackageResponses { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; chassisPackageType? : number; } cimPhysicalPackage { responses : cimPhysicalPackageResponses[]; status : number; } hardwareinfo { CIM_ComputerSystemPackage : cimComputerSystemPackage; CIM_SystemPackaging : cimSystemPackaging; CIM_Chassis : cimChassis; CIM_Chip : cimChip; CIM_Card : cimCard; CIM_BIOSElement : cimBIOSElement; CIM_Processor : cimProcessor; CIM_PhysicalMemory : cimPhysicalMemory; CIM_MediaAccessDevice : cimMediaAccessDevice; CIM_PhysicalPackage : cimPhysicalPackage; } }","title":"Hardware information"},{"location":"methods/types/#power-action","text":"powerAction { returnValue : number; returnValueStr : string; }","title":"Power action"},{"location":"methods/types/#power-capabilities","text":"powerCapabilities { powerUp : number; powerCycle : number; powerDown : number; reset : number; softOff : number; softReset : number; sleep : number; hibernate : number; powerUpToBIOS : number; resetToBIOS : number; resetToSecureErase : number; resetToIDE-RFloppy : number; powerOnToIDE-RFloppy : number; resetToIDE-RCDROM : number; powerOnToIDE-RCDROM : number; resetToPXE : number; powerOnToPXE : number; }","title":"Power capabilities"},{"location":"methods/types/#power-state","text":"powerState { powerState : number; }","title":"Power state"},{"location":"methods/types/#version","text":"module versionInfo { cimSoftwareIdentityResponses { instanceID : string; isEntity : boolean; versionString : any; } cimSoftwareIdentity { responses : cimSoftwareIdentityResponses[]; status : number; } amtSetupAndConfigurationServiceResponse { creationClassName : string; elementName : string; enabledState : number; name : string; passwordModel : number; provisioningMode : number; provisioningServerOTP : string; provisioningState : number; requestedState : number; systemCreationClassName : string; systemName : string; zeroTouchConfigurationEnabled : boolean; } amtSetupAndConfigurationService { response : amtSetupAndConfigurationServiceResponse; status : number; } version { CIM_SoftwareIdentity : cimSoftwareIdentity; AMT_SetupAndConfigurationService : amtSetupAndConfigurationServiceResponse; } }","title":"Version"},{"location":"methods/version/","text":"AMT Version \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"Version\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ \"CIM_SoftwareIdentity\" : { \"responses\" : [ { \"instanceID\" : \"Flash\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Netstack\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"AMTApps\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"AMT\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Sku\" , \"isEntity\" : true , \"versionString\" : 16392 }, { \"instanceID\" : \"VendorID\" , \"isEntity\" : true , \"versionString\" : 8086 }, { \"instanceID\" : \"Build Number\" , \"isEntity\" : true , \"versionString\" : 3425 }, { \"instanceID\" : \"Recovery Version\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Recovery Build Num\" , \"isEntity\" : true , \"versionString\" : 3425 }, { \"instanceID\" : \"Legacy Mode\" , \"isEntity\" : true , \"versionString\" : \"False\" }, { \"instanceID\" : \"AMT FW Core Version\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" } ], \"status\" : 200 }, \"AMT_SetupAndConfigurationService\" : { \"response\" : { \"creationClassName\" : \"AMT_SetupAndConfigurationService\" , \"elementName\" : \"Intel(r) AMT Setup and Configuration Service\" , \"enabledState\" : 5 , \"name\" : \"Intel(r) AMT Setup and Configuration Service\" , \"passwordModel\" : 1 , \"provisioningMode\" : 1 , \"provisioningServerOTP\" : \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\" , \"provisioningState\" : 2 , \"requestedState\" : 12 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"Intel(r) AMT\" , \"zeroTouchConfigurationEnabled\" : true }, \"status\" : 200 } }","title":"Version"},{"location":"methods/version/#amt-version","text":"Click here for supported input and output types.","title":"AMT Version"},{"location":"methods/version/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"Version\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/version/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ \"CIM_SoftwareIdentity\" : { \"responses\" : [ { \"instanceID\" : \"Flash\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Netstack\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"AMTApps\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"AMT\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Sku\" , \"isEntity\" : true , \"versionString\" : 16392 }, { \"instanceID\" : \"VendorID\" , \"isEntity\" : true , \"versionString\" : 8086 }, { \"instanceID\" : \"Build Number\" , \"isEntity\" : true , \"versionString\" : 3425 }, { \"instanceID\" : \"Recovery Version\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Recovery Build Num\" , \"isEntity\" : true , \"versionString\" : 3425 }, { \"instanceID\" : \"Legacy Mode\" , \"isEntity\" : true , \"versionString\" : \"False\" }, { \"instanceID\" : \"AMT FW Core Version\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" } ], \"status\" : 200 }, \"AMT_SetupAndConfigurationService\" : { \"response\" : { \"creationClassName\" : \"AMT_SetupAndConfigurationService\" , \"elementName\" : \"Intel(r) AMT Setup and Configuration Service\" , \"enabledState\" : 5 , \"name\" : \"Intel(r) AMT Setup and Configuration Service\" , \"passwordModel\" : 1 , \"provisioningMode\" : 1 , \"provisioningServerOTP\" : \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\" , \"provisioningState\" : 2 , \"requestedState\" : 12 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"Intel(r) AMT\" , \"zeroTouchConfigurationEnabled\" : true }, \"status\" : 200 } }","title":"Example : Success ResponseBody"}]}